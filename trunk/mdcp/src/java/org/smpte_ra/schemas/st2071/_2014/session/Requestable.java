
package org.smpte_ra.schemas.st2071._2014.session;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * 
 *             UCN = urn:smpte:ucn:org.smpte.st2071:requestable_v1.0
 *         
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Requestable", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/session")
@XmlSeeAlso({
    org.smpte_ra.schemas.st2071._2014.device.ObjectFactory.class,
    org.smpte_ra.schemas.st2071._2014.event.ObjectFactory.class,
    org.smpte_ra.schemas.st2071._2014.identity.ObjectFactory.class,
    org.smpte_ra.schemas.st2071._2014.media.ObjectFactory.class,
    org.smpte_ra.schemas.st2071._2014.mode.ObjectFactory.class,
    org.smpte_ra.schemas.st2071._2014.query.ObjectFactory.class,
    org.smpte_ra.schemas.st2071._2014.security.ObjectFactory.class,
    org.smpte_ra.schemas.st2071._2014.session.ObjectFactory.class,
    org.smpte_ra.schemas.st2071._2014.types.ObjectFactory.class
})
public interface Requestable {


    /**
     * 
     * @param approve
     * @return
     *     returns org.smpte_ra.schemas.st2071._2014.session.EmptyResponse
     * @throws SecurityExceptionFault
     * @throws RequestNotFoundFault
     * @throws RequestExpiredFault
     */
    @WebMethod(action = "http://www.smpte-ra.org/wsdl/st2071/2014/session/Requestable/approve")
    @WebResult(name = "approveResponse", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/session", partName = "approveResponse")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @Action(input = "http://www.smpte-ra.org/wsdl/st2071/2014/session/Requestable/approve", output = "http://www.smpte-ra.org/wsdl/st2071/2014/session/Requestable/approveResponse")
    public EmptyResponse approve(
        @WebParam(name = "approve", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/session", partName = "approve")
        URIRequest approve)
        throws RequestExpiredFault, RequestNotFoundFault, SecurityExceptionFault
    ;

    /**
     * 
     * @param message
     * @param requestID
     * @throws SecurityExceptionFault
     * @throws RequestNotFoundFault
     * @throws RequestExpiredFault
     */
    @WebMethod(action = "http://www.smpte-ra.org/wsdl/st2071/2014/session/Requestable/deny")
    @RequestWrapper(localName = "deny", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/session", className = "org.smpte_ra.schemas.st2071._2014.session.Deny")
    @ResponseWrapper(localName = "denyResponse", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/session", className = "org.smpte_ra.schemas.st2071._2014.session.EmptyResponse")
    @Action(input = "http://www.smpte-ra.org/wsdl/st2071/2014/session/Requestable/deny", output = "http://www.smpte-ra.org/wsdl/st2071/2014/session/Requestable/denyResponse")
    public void deny(
        @WebParam(name = "RequestID", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/session")
        String requestID,
        @WebParam(name = "Message", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/session")
        String message)
        throws RequestExpiredFault, RequestNotFoundFault, SecurityExceptionFault
    ;

    /**
     * 
     * @param request
     * @return
     *     returns org.smpte_ra.schemas.st2071._2014.session.URIResponse
     * @throws RequestDeniedFault
     * @throws SecurityExceptionFault
     * @throws SessionNotFoundFault
     * @throws NotAcquiredFault
     */
    @WebMethod(action = "http://www.smpte-ra.org/wsdl/st2071/2014/session/Requestable/request")
    @WebResult(name = "requestResponse", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/session", partName = "requestResponse")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @Action(input = "http://www.smpte-ra.org/wsdl/st2071/2014/session/Requestable/request", output = "http://www.smpte-ra.org/wsdl/st2071/2014/session/Requestable/requestResponse")
    public URIResponse request(
        @WebParam(name = "request", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/session", partName = "request")
        RequestParameters request)
        throws NotAcquiredFault, RequestDeniedFault, SecurityExceptionFault, SessionNotFoundFault
    ;

    /**
     * 
     * @param take
     * @return
     *     returns org.smpte_ra.schemas.st2071._2014.session.URIResponse
     * @throws SecurityExceptionFault
     * @throws LockNotFoundFault
     * @throws SessionNotFoundFault
     * @throws NotAcquiredFault
     */
    @WebMethod(action = "http://www.smpte-ra.org/wsdl/st2071/2014/session/Requestable/take")
    @WebResult(name = "takeResponse", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/session", partName = "takeResponse")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @Action(input = "http://www.smpte-ra.org/wsdl/st2071/2014/session/Requestable/take", output = "http://www.smpte-ra.org/wsdl/st2071/2014/session/Requestable/takeResponse")
    public URIResponse take(
        @WebParam(name = "take", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/session", partName = "take")
        RequestParameters take)
        throws LockNotFoundFault, NotAcquiredFault, SecurityExceptionFault, SessionNotFoundFault
    ;

}
