
package org.smpte_ra.schemas.st2071._2014.security;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "DeviceService", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/security", wsdlLocation = "file:/Users/posicks/work/workspaces/standards/MDCP/src/xml/security_services.wsdl")
public class DeviceService
    extends Service
{

    private final static URL DEVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException DEVICESERVICE_EXCEPTION;
    private final static QName DEVICESERVICE_QNAME = new QName("http://www.smpte-ra.org/schemas/st2071/2014/security", "DeviceService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/Users/posicks/work/workspaces/standards/MDCP/src/xml/security_services.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        DEVICESERVICE_WSDL_LOCATION = url;
        DEVICESERVICE_EXCEPTION = e;
    }

    public DeviceService() {
        super(__getWsdlLocation(), DEVICESERVICE_QNAME);
    }

    public DeviceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), DEVICESERVICE_QNAME, features);
    }

    public DeviceService(URL wsdlLocation) {
        super(wsdlLocation, DEVICESERVICE_QNAME);
    }

    public DeviceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, DEVICESERVICE_QNAME, features);
    }

    public DeviceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DeviceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns Authorizer
     */
    @WebEndpoint(name = "AuthorizerPort")
    public Authorizer getAuthorizerPort() {
        return super.getPort(new QName("http://www.smpte-ra.org/schemas/st2071/2014/security", "AuthorizerPort"), Authorizer.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Authorizer
     */
    @WebEndpoint(name = "AuthorizerPort")
    public Authorizer getAuthorizerPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.smpte-ra.org/schemas/st2071/2014/security", "AuthorizerPort"), Authorizer.class, features);
    }

    /**
     * 
     * @return
     *     returns Authenticator
     */
    @WebEndpoint(name = "AuthenticatorPort")
    public Authenticator getAuthenticatorPort() {
        return super.getPort(new QName("http://www.smpte-ra.org/schemas/st2071/2014/security", "AuthenticatorPort"), Authenticator.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Authenticator
     */
    @WebEndpoint(name = "AuthenticatorPort")
    public Authenticator getAuthenticatorPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.smpte-ra.org/schemas/st2071/2014/security", "AuthenticatorPort"), Authenticator.class, features);
    }

    private static URL __getWsdlLocation() {
        if (DEVICESERVICE_EXCEPTION!= null) {
            throw DEVICESERVICE_EXCEPTION;
        }
        return DEVICESERVICE_WSDL_LOCATION;
    }

}
