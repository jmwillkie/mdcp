
package org.smpte_ra.schemas.st2071._2014.media;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import org.smpte_ra.schemas.st2071._2014.query.QueryExpression;


/**
 * 
 *             UCN = urn:smpte:ucn:org.smpte.st2071:media_directory_v1.0
 *         
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "MediaDirectory", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/media")
@XmlSeeAlso({
    org.smpte_ra.schemas.st2071._2014.device.ObjectFactory.class,
    org.smpte_ra.schemas.st2071._2014.event.ObjectFactory.class,
    org.smpte_ra.schemas.st2071._2014.identity.ObjectFactory.class,
    org.smpte_ra.schemas.st2071._2014.media.ObjectFactory.class,
    org.smpte_ra.schemas.st2071._2014.mode.ObjectFactory.class,
    org.smpte_ra.schemas.st2071._2014.query.ObjectFactory.class,
    org.smpte_ra.schemas.st2071._2014.security.ObjectFactory.class,
    org.smpte_ra.schemas.st2071._2014.types.ObjectFactory.class
})
public interface MediaDirectory {


    /**
     * 
     * @return
     *     returns org.smpte_ra.schemas.st2071._2014.media.MediaContainer
     */
    @WebMethod(action = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/MediaContainer")
    @WebResult(name = "MediaContainer", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/media")
    @RequestWrapper(localName = "getMediaContainer", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/media", className = "org.smpte_ra.schemas.st2071._2014.media.GetMediaContainer")
    @ResponseWrapper(localName = "getMediaContainerResponse", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/media", className = "org.smpte_ra.schemas.st2071._2014.media.GetMediaContainerResponse")
    @Action(input = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/MediaContainer", output = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/MediaContainerResponse")
    public MediaContainer getMediaContainer();

    /**
     * 
     * @param create
     * @return
     *     returns org.smpte_ra.schemas.st2071._2014.media.MediaResponse
     * @throws MediaCreationFailedFault
     * @throws MediaNotFoundFault
     * @throws SecurityExceptionFault
     */
    @WebMethod(action = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/create")
    @WebResult(name = "createResponse", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/media", partName = "createResponse")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @Action(input = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/create", output = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/createResponse")
    public MediaResponse create(
        @WebParam(name = "create", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/media", partName = "create")
        Create create)
        throws MediaCreationFailedFault, MediaNotFoundFault, SecurityExceptionFault
    ;

    /**
     * 
     * @param delete
     * @return
     *     returns org.smpte_ra.schemas.st2071._2014.media.MediaResponse
     * @throws MediaNotFoundFault
     * @throws SecurityExceptionFault
     * @throws MediaDeletionFailedFault
     */
    @WebMethod(action = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/delete")
    @WebResult(name = "deleteResponse", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/media", partName = "deleteResponse")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @Action(input = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/delete", output = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/deleteResponse")
    public MediaResponse delete(
        @WebParam(name = "delete", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/media", partName = "delete")
        UMNParameter delete)
        throws MediaDeletionFailedFault, MediaNotFoundFault, SecurityExceptionFault
    ;

    /**
     * 
     * @param queryExpression
     * @param umn
     * @return
     *     returns org.smpte_ra.schemas.st2071._2014.media.MediaList
     * @throws InvalidQueryFault
     * @throws MediaNotFoundFault
     * @throws SecurityExceptionFault
     */
    @WebMethod(action = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/list")
    @WebResult(name = "MediaList", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/media")
    @RequestWrapper(localName = "list", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/media", className = "org.smpte_ra.schemas.st2071._2014.media.UMNFilter")
    @ResponseWrapper(localName = "listResponse", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/media", className = "org.smpte_ra.schemas.st2071._2014.media.MediaListResponse")
    @Action(input = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/list", output = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/listResponse")
    public MediaList list(
        @WebParam(name = "UMN", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/identity")
        String umn,
        @WebParam(name = "QueryExpression", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/query")
        QueryExpression queryExpression)
        throws InvalidQueryFault, MediaNotFoundFault, SecurityExceptionFault
    ;

    /**
     * 
     * @param lookup
     * @return
     *     returns org.smpte_ra.schemas.st2071._2014.media.MediaResponse
     * @throws MediaNotFoundFault
     * @throws SecurityExceptionFault
     */
    @WebMethod(action = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/lookup")
    @WebResult(name = "lookupResponse", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/media", partName = "lookupResponse")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @Action(input = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/lookup", output = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/lookupResponse")
    public MediaResponse lookup(
        @WebParam(name = "lookup", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/media", partName = "lookup")
        UMNParameter lookup)
        throws MediaNotFoundFault, SecurityExceptionFault
    ;

    /**
     * 
     * @param umn
     * @return
     *     returns org.smpte_ra.schemas.st2071._2014.media.MediaAsset
     * @throws MediaNotFoundFault
     * @throws SecurityExceptionFault
     */
    @WebMethod(action = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/lookupAsset")
    @WebResult(name = "MediaAsset", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/media")
    @RequestWrapper(localName = "lookupAsset", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/media", className = "org.smpte_ra.schemas.st2071._2014.media.UMNParameter")
    @ResponseWrapper(localName = "lookupAssetResponse", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/media", className = "org.smpte_ra.schemas.st2071._2014.media.LookupAssetResponse")
    @Action(input = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/lookupAsset", output = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/lookupAssetResponse")
    public MediaAsset lookupAsset(
        @WebParam(name = "UMN", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/identity")
        String umn)
        throws MediaNotFoundFault, SecurityExceptionFault
    ;

    /**
     * 
     * @param queryExpression
     * @param umn
     * @return
     *     returns org.smpte_ra.schemas.st2071._2014.media.MediaList
     * @throws InvalidQueryFault
     * @throws MediaNotFoundFault
     * @throws SecurityExceptionFault
     */
    @WebMethod(action = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/search")
    @WebResult(name = "MediaList", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/media")
    @RequestWrapper(localName = "search", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/media", className = "org.smpte_ra.schemas.st2071._2014.media.UMNFilter")
    @ResponseWrapper(localName = "searchResponse", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/media", className = "org.smpte_ra.schemas.st2071._2014.media.MediaListResponse")
    @Action(input = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/search", output = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/searchResponse")
    public MediaList search(
        @WebParam(name = "UMN", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/identity")
        String umn,
        @WebParam(name = "QueryExpression", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/query")
        QueryExpression queryExpression)
        throws InvalidQueryFault, MediaNotFoundFault, SecurityExceptionFault
    ;

    /**
     * 
     * @param update
     * @return
     *     returns org.smpte_ra.schemas.st2071._2014.media.MediaResponse
     * @throws MediaUpdateFailedFault
     * @throws MediaNotFoundFault
     * @throws SecurityExceptionFault
     */
    @WebMethod(action = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/update")
    @WebResult(name = "updateResponse", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/media", partName = "updateResponse")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @Action(input = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/update", output = "http://www.smpte-ra.org/wsdl/st2071/2014/media/MediaDirectory/updateResponse")
    public MediaResponse update(
        @WebParam(name = "update", targetNamespace = "http://www.smpte-ra.org/schemas/st2071/2014/media", partName = "update")
        Update update)
        throws MediaNotFoundFault, MediaUpdateFailedFault, SecurityExceptionFault
    ;

}
