// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 1.1.4322.2032
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

// 
// This source code was auto-generated by Mono Web Services Description Language Utility
//


/// <remarks/>
[System.Web.Services.WebServiceBinding(Name="AcquirablePort", Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public class AcquirableHTTPBinding : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    public AcquirableHTTPBinding() {
        this.Url = "http://localhost:8088/Acquirable";
    }
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.smpte-ra.org/wsdl/st2071/2014/device/control/Acquirable/Acquired", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("getAcquiredResponse", Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
    public BooleanResponse getAcquired([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")] EmptyRequest getAcquired) {
        object[] results = this.Invoke("getAcquired", new object[] {
                    getAcquired});
        return ((BooleanResponse)(results[0]));
    }
    
    public System.IAsyncResult BegingetAcquired(EmptyRequest getAcquired, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAcquired", new object[] {
                    getAcquired}, callback, asyncState);
    }
    
    public BooleanResponse EndgetAcquired(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((BooleanResponse)(results[0]));
    }
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.smpte-ra.org/wsdl/st2071/2014/device/control/Acquirable/AcquiredBy", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("getAcquiredByResponse", Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
    public getAcquiredByResponse getAcquiredBy([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")] EmptyRequest getAcquiredBy) {
        object[] results = this.Invoke("getAcquiredBy", new object[] {
                    getAcquiredBy});
        return ((getAcquiredByResponse)(results[0]));
    }
    
    public System.IAsyncResult BegingetAcquiredBy(EmptyRequest getAcquiredBy, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAcquiredBy", new object[] {
                    getAcquiredBy}, callback, asyncState);
    }
    
    public getAcquiredByResponse EndgetAcquiredBy(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((getAcquiredByResponse)(results[0]));
    }
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.smpte-ra.org/wsdl/st2071/2014/device/control/Acquirable/acquire", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("acquireResponse", Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
    public URIResponse acquire([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")] acquire acquire) {
        object[] results = this.Invoke("acquire", new object[] {
                    acquire});
        return ((URIResponse)(results[0]));
    }
    
    public System.IAsyncResult Beginacquire(acquire acquire, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("acquire", new object[] {
                    acquire}, callback, asyncState);
    }
    
    public URIResponse Endacquire(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((URIResponse)(results[0]));
    }
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.smpte-ra.org/wsdl/st2071/2014/device/control/Acquirable/release", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("releaseResponse", Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
    public BooleanResponse release([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")] URIRequest release) {
        object[] results = this.Invoke("release", new object[] {
                    release});
        return ((BooleanResponse)(results[0]));
    }
    
    public System.IAsyncResult Beginrelease(URIRequest release, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("release", new object[] {
                    release}, callback, asyncState);
    }
    
    public BooleanResponse Endrelease(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((BooleanResponse)(results[0]));
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
[System.Xml.Serialization.XmlRootAttribute("getLockedBy", Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
public class EmptyRequest {
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
[System.Xml.Serialization.XmlRootAttribute("unlockResponse", Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
public class BooleanResponse {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/types")]
    public bool Boolean;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
public class getAcquiredByResponse {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItem(IsNullable=false)]
    public Session[] Sessions;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
public class Session {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="", DataType="anyURI")]
    public string id;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public bool is_lock;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public bool is_lockSpecified;
    
    /// <remarks/>
    public string Who;
    
    /// <remarks/>
    public string Name;
    
    /// <remarks/>
    public DateTime AcquiredAt;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/types")]
[System.Xml.Serialization.XmlRootAttribute("AcquiredAt", Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FramedTime))]
public class DateTime {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
    public System.DateTime Date;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
    public string Hour;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
    public string Minute;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
    public string Second;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
    public string Microsecond;
    
    /// <remarks/>
    public System.UInt64 MicrosFromEpoch;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/types")]
public class FramedTime : DateTime {
    
    /// <remarks/>
    public System.UInt64 Frame;
    
    /// <remarks/>
    public System.UInt64 FrameRate;
    
    /// <remarks/>
    public System.UInt64 Scale;
    
    /// <remarks/>
    public System.UInt64 TotalFrames;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
public class acquire {
    
    /// <remarks/>
    public string Name;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
[System.Xml.Serialization.XmlRootAttribute("takeResponse", Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
public class URIResponse {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/identity", DataType="anyURI")]
    public string URI;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
[System.Xml.Serialization.XmlRootAttribute("approve", Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
public class URIRequest {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/identity", DataType="anyURI")]
    public string URI;
}

/// <remarks/>
[System.Web.Services.WebServiceBinding(Name="LockablePort", Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public class LockableHTTPBinding : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    public LockableHTTPBinding() {
        this.Url = "http://localhost:8088/Lockable";
    }
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.smpte-ra.org/wsdl/st2071/2014/device/control/Lockable/Locked", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("getLockedResponse", Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
    public BooleanResponse getLocked([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")] EmptyRequest getLocked) {
        object[] results = this.Invoke("getLocked", new object[] {
                    getLocked});
        return ((BooleanResponse)(results[0]));
    }
    
    public System.IAsyncResult BegingetLocked(EmptyRequest getLocked, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getLocked", new object[] {
                    getLocked}, callback, asyncState);
    }
    
    public BooleanResponse EndgetLocked(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((BooleanResponse)(results[0]));
    }
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.smpte-ra.org/wsdl/st2071/2014/device/control/Lockable/LockedBy", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("getLockedByResponse", Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
    public getLockedByResponse getLockedBy([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")] EmptyRequest getLockedBy) {
        object[] results = this.Invoke("getLockedBy", new object[] {
                    getLockedBy});
        return ((getLockedByResponse)(results[0]));
    }
    
    public System.IAsyncResult BegingetLockedBy(EmptyRequest getLockedBy, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getLockedBy", new object[] {
                    getLockedBy}, callback, asyncState);
    }
    
    public getLockedByResponse EndgetLockedBy(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((getLockedByResponse)(results[0]));
    }
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.smpte-ra.org/wsdl/st2071/2014/device/control/Lockable/lock", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("lockResponse", Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
    public URIResponse @lock([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")] @lock @lock) {
        object[] results = this.Invoke("lock", new object[] {
                    @lock});
        return ((URIResponse)(results[0]));
    }
    
    public System.IAsyncResult Beginlock(@lock @lock, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("lock", new object[] {
                    @lock}, callback, asyncState);
    }
    
    public URIResponse Endlock(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((URIResponse)(results[0]));
    }
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.smpte-ra.org/wsdl/st2071/2014/device/control/Lockable/unlock", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("unlockResponse", Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
    public BooleanResponse unlock([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")] URIRequest unlock) {
        object[] results = this.Invoke("unlock", new object[] {
                    unlock});
        return ((BooleanResponse)(results[0]));
    }
    
    public System.IAsyncResult Beginunlock(URIRequest unlock, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("unlock", new object[] {
                    unlock}, callback, asyncState);
    }
    
    public BooleanResponse Endunlock(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((BooleanResponse)(results[0]));
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
public class getLockedByResponse {
    
    /// <remarks/>
    public Session Session;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
public class @lock {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
    public string SessionID;
    
    /// <remarks/>
    public string Name;
}

/// <remarks/>
[System.Web.Services.WebServiceBinding(Name="RequestablePort", Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public class RequestableHTTPBinding : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    public RequestableHTTPBinding() {
        this.Url = "http://localhost:8088/Requestable";
    }
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.smpte-ra.org/wsdl/st2071/2014/session/Requestable/approve", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("approveResponse", Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
    public EmptyResponse approve([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")] URIRequest approve) {
        object[] results = this.Invoke("approve", new object[] {
                    approve});
        return ((EmptyResponse)(results[0]));
    }
    
    public System.IAsyncResult Beginapprove(URIRequest approve, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("approve", new object[] {
                    approve}, callback, asyncState);
    }
    
    public EmptyResponse Endapprove(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((EmptyResponse)(results[0]));
    }
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.smpte-ra.org/wsdl/st2071/2014/session/Requestable/deny", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("denyResponse", Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
    public EmptyResponse deny([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")] deny deny) {
        object[] results = this.Invoke("deny", new object[] {
                    deny});
        return ((EmptyResponse)(results[0]));
    }
    
    public System.IAsyncResult Begindeny(deny deny, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("deny", new object[] {
                    deny}, callback, asyncState);
    }
    
    public EmptyResponse Enddeny(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((EmptyResponse)(results[0]));
    }
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.smpte-ra.org/wsdl/st2071/2014/session/Requestable/request", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("requestResponse", Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
    public URIResponse request([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")] RequestParameters request) {
        object[] results = this.Invoke("request", new object[] {
                    request});
        return ((URIResponse)(results[0]));
    }
    
    public System.IAsyncResult Beginrequest(RequestParameters request, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("request", new object[] {
                    request}, callback, asyncState);
    }
    
    public URIResponse Endrequest(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((URIResponse)(results[0]));
    }
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.smpte-ra.org/wsdl/st2071/2014/session/Requestable/take", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("takeResponse", Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
    public URIResponse take([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")] RequestParameters take) {
        object[] results = this.Invoke("take", new object[] {
                    take});
        return ((URIResponse)(results[0]));
    }
    
    public System.IAsyncResult Begintake(RequestParameters take, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("take", new object[] {
                    take}, callback, asyncState);
    }
    
    public URIResponse Endtake(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((URIResponse)(results[0]));
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
[System.Xml.Serialization.XmlRootAttribute("denyResponse", Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
public class EmptyResponse {
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
public class deny {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
    public string RequestID;
    
    /// <remarks/>
    public string Message;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
[System.Xml.Serialization.XmlRootAttribute("take", Namespace="http://www.smpte-ra.org/schemas/st2071/2014/session")]
public class RequestParameters {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
    public string ID;
    
    /// <remarks/>
    public string Name;
    
    /// <remarks/>
    public string Message;
}
