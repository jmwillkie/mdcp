package org.smpte.st2071._2014.media;


/**
* org/smpte/st2071/_2014/media/_MediaDirectoryStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from MDCF.idl
* Thursday, March 20, 2014 1:55:28 PM EDT
*/

public class _MediaDirectoryStub extends org.omg.CORBA.portable.ObjectImpl implements org.smpte.st2071._2014.media.MediaDirectory
{


  // UCN = "urn:smpte:ucn:org.smpte.st2071:media_directory_v1.0";
  public org.smpte.st2071._2014.media.MediaContainer MediaContainer ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_MediaContainer", true);
                $in = _invoke ($out);
                org.smpte.st2071._2014.media.MediaContainer $result = org.smpte.st2071._2014.media.MediaContainerHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return MediaContainer (        );
            } finally {
                _releaseReply ($in);
            }
  } // MediaContainer


  // raises (org::smpte::st2071::_2014::security::SecurityException);
  public org.smpte.st2071._2014.media.Media create (org.smpte.st2071._2014.media.Media media, org.smpte.st2071._2014.media.MediaPointer[] pointers) throws org.smpte.st2071._2014.media.MediaNotFound, org.smpte.st2071._2014.media.MediaCreationFailed, org.smpte.st2071._2014.security.SecurityException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("create", true);
                org.smpte.st2071._2014.media.MediaHelper.write ($out, media);
                org.smpte.st2071._2014.media.MediaPointersHelper.write ($out, pointers);
                $in = _invoke ($out);
                org.smpte.st2071._2014.media.Media $result = org.smpte.st2071._2014.media.MediaHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:org/smpte/st2071/_2014/media/MediaNotFound:1.0"))
                    throw org.smpte.st2071._2014.media.MediaNotFoundHelper.read ($in);
                else if (_id.equals ("IDL:org/smpte/st2071/_2014/media/MediaCreationFailed:1.0"))
                    throw org.smpte.st2071._2014.media.MediaCreationFailedHelper.read ($in);
                else if (_id.equals ("IDL:org/smpte/st2071/_2014/security/SecurityException:1.0"))
                    throw org.smpte.st2071._2014.security.SecurityExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return create (media, pointers        );
            } finally {
                _releaseReply ($in);
            }
  } // create

  public org.smpte.st2071._2014.media.Media delete (org.smpte.st2071._2014.identity.UMN umn) throws org.smpte.st2071._2014.media.MediaNotFound, org.smpte.st2071._2014.media.MediaDeletionFailed, org.smpte.st2071._2014.security.SecurityException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("delete", true);
                org.smpte.st2071._2014.identity.UMNHelper.write ($out, umn);
                $in = _invoke ($out);
                org.smpte.st2071._2014.media.Media $result = org.smpte.st2071._2014.media.MediaHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:org/smpte/st2071/_2014/media/MediaNotFound:1.0"))
                    throw org.smpte.st2071._2014.media.MediaNotFoundHelper.read ($in);
                else if (_id.equals ("IDL:org/smpte/st2071/_2014/media/MediaDeletionFailed:1.0"))
                    throw org.smpte.st2071._2014.media.MediaDeletionFailedHelper.read ($in);
                else if (_id.equals ("IDL:org/smpte/st2071/_2014/security/SecurityException:1.0"))
                    throw org.smpte.st2071._2014.security.SecurityExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return delete (umn        );
            } finally {
                _releaseReply ($in);
            }
  } // delete

  public org.smpte.st2071._2014.media.Media[] list (org.smpte.st2071._2014.identity.UMN container, org.smpte.st2071._2014.query.QueryExpression filter) throws org.smpte.st2071._2014.media.MediaNotFound, org.smpte.st2071._2014.query.InvalidQuery, org.smpte.st2071._2014.security.SecurityException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("list", true);
                org.smpte.st2071._2014.identity.UMNHelper.write ($out, container);
                org.smpte.st2071._2014.query.QueryExpressionHelper.write ($out, filter);
                $in = _invoke ($out);
                org.smpte.st2071._2014.media.Media $result[] = org.smpte.st2071._2014.media.MediaListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:org/smpte/st2071/_2014/media/MediaNotFound:1.0"))
                    throw org.smpte.st2071._2014.media.MediaNotFoundHelper.read ($in);
                else if (_id.equals ("IDL:org/smpte/st2071/_2014/query/InvalidQuery:1.0"))
                    throw org.smpte.st2071._2014.query.InvalidQueryHelper.read ($in);
                else if (_id.equals ("IDL:org/smpte/st2071/_2014/security/SecurityException:1.0"))
                    throw org.smpte.st2071._2014.security.SecurityExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return list (container, filter        );
            } finally {
                _releaseReply ($in);
            }
  } // list

  public org.smpte.st2071._2014.media.Media lookup (org.smpte.st2071._2014.identity.UMN umn) throws org.smpte.st2071._2014.media.MediaNotFound, org.smpte.st2071._2014.security.SecurityException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("lookup", true);
                org.smpte.st2071._2014.identity.UMNHelper.write ($out, umn);
                $in = _invoke ($out);
                org.smpte.st2071._2014.media.Media $result = org.smpte.st2071._2014.media.MediaHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:org/smpte/st2071/_2014/media/MediaNotFound:1.0"))
                    throw org.smpte.st2071._2014.media.MediaNotFoundHelper.read ($in);
                else if (_id.equals ("IDL:org/smpte/st2071/_2014/security/SecurityException:1.0"))
                    throw org.smpte.st2071._2014.security.SecurityExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return lookup (umn        );
            } finally {
                _releaseReply ($in);
            }
  } // lookup

  public org.smpte.st2071._2014.media.MediaAsset lookupAsset (String mid) throws org.smpte.st2071._2014.media.MediaNotFound, org.smpte.st2071._2014.security.SecurityException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("lookupAsset", true);
                $out.write_wstring (mid);
                $in = _invoke ($out);
                org.smpte.st2071._2014.media.MediaAsset $result = org.smpte.st2071._2014.media.MediaAssetHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:org/smpte/st2071/_2014/media/MediaNotFound:1.0"))
                    throw org.smpte.st2071._2014.media.MediaNotFoundHelper.read ($in);
                else if (_id.equals ("IDL:org/smpte/st2071/_2014/security/SecurityException:1.0"))
                    throw org.smpte.st2071._2014.security.SecurityExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return lookupAsset (mid        );
            } finally {
                _releaseReply ($in);
            }
  } // lookupAsset

  public org.smpte.st2071._2014.media.Media[] search (org.smpte.st2071._2014.identity.UMN container, org.smpte.st2071._2014.query.QueryExpression filter) throws org.smpte.st2071._2014.media.MediaNotFound, org.smpte.st2071._2014.query.InvalidQuery, org.smpte.st2071._2014.security.SecurityException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("search", true);
                org.smpte.st2071._2014.identity.UMNHelper.write ($out, container);
                org.smpte.st2071._2014.query.QueryExpressionHelper.write ($out, filter);
                $in = _invoke ($out);
                org.smpte.st2071._2014.media.Media $result[] = org.smpte.st2071._2014.media.MediaListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:org/smpte/st2071/_2014/media/MediaNotFound:1.0"))
                    throw org.smpte.st2071._2014.media.MediaNotFoundHelper.read ($in);
                else if (_id.equals ("IDL:org/smpte/st2071/_2014/query/InvalidQuery:1.0"))
                    throw org.smpte.st2071._2014.query.InvalidQueryHelper.read ($in);
                else if (_id.equals ("IDL:org/smpte/st2071/_2014/security/SecurityException:1.0"))
                    throw org.smpte.st2071._2014.security.SecurityExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return search (container, filter        );
            } finally {
                _releaseReply ($in);
            }
  } // search

  public org.smpte.st2071._2014.media.Media update (org.smpte.st2071._2014.media.Media media) throws org.smpte.st2071._2014.media.MediaNotFound, org.smpte.st2071._2014.media.MediaUpdateFailed, org.smpte.st2071._2014.security.SecurityException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("update", true);
                org.smpte.st2071._2014.media.MediaHelper.write ($out, media);
                $in = _invoke ($out);
                org.smpte.st2071._2014.media.Media $result = org.smpte.st2071._2014.media.MediaHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:org/smpte/st2071/_2014/media/MediaNotFound:1.0"))
                    throw org.smpte.st2071._2014.media.MediaNotFoundHelper.read ($in);
                else if (_id.equals ("IDL:org/smpte/st2071/_2014/media/MediaUpdateFailed:1.0"))
                    throw org.smpte.st2071._2014.media.MediaUpdateFailedHelper.read ($in);
                else if (_id.equals ("IDL:org/smpte/st2071/_2014/security/SecurityException:1.0"))
                    throw org.smpte.st2071._2014.security.SecurityExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return update (media        );
            } finally {
                _releaseReply ($in);
            }
  } // update

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:org/smpte/st2071/2014/media/MediaDirectory:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _MediaDirectoryStub
