<project name="MDCDForAndroid" default="all" basedir=".">
	<property name="bnd.jar" value="bnd-0.0.384.jar" />
    <property name="basepackage" value="org.smpte.st2071.mdcd.android" />
	<property name="build_dir" value="${basedir}/bin/classes" />
    <property name="src_dir" value="${basedir}/src" />
    <property name="gen_src_dir" value="${basedir}/gen" />
    <property name="java_src_dir" value="${src_dir}/java" />
    <property name="metainf_dir" value="${src_dir}/metainf" />
    <property name="lib_dir" value="${basedir}/libs" />
    <property name="resource_dir" value="${basedir}/res" />
	<property name="doc_dir" value="${basedir}/javadoc" />
	<property name="dist_dir" value="${basedir}" />
	<property name="tests_dir" value="${basedir}/tests" />
	<property name="reports_dir" value="${basedir}/reports" />
	<property name="version" value="1.0.0" />
	<property name="jarname" value="${ant.project.name}-${version}.jar" />
	<property name="zipname" value="${ant.project.name}-${version}.zip" />
	<property name="targzname" value="${ant.project.name}-${version}.tar.gz" />
	<property name="bundle.jar" value="${basepackage}.${ant.project.name}_${version}.jar" />

	<property name="j2se.javadoc" value="http://docs.oracle.com/javase/1.7.0/docs/api/" />

	<target name="all" description="Compile and Jar" depends="bundle, docs">
	</target>

	<target name="compile" description="Compile everything">
		<mkdir dir="${build_dir}" />
		<javac destdir="${build_dir}" debug="true" target="1.7" source="1.7" includeantruntime="false">
			<src path="${java_src_dir}" />
	        <include name="${lib_dir}/**/*.jar" />
			<exclude name="**/tests/**" />
		</javac>
	</target>

	<target name="jar" description="Makes jar file" depends="compile">
        <mkdir dir="${metainf_dir}" />
		<jar jarfile="${dist_dir}/${jarname}" basedir="${build_dir}" includes="**/*.class **/*.properties **/.xml **/*.wsdl **/*.xsd **/*.idl">
			<exclude name="**/tests/*.class" />
			<exclude name="**/tests/**" />
			<manifest>
				<attribute name="Implementation-Title" value="SMPTE ST2071-3 Media and Device Control Discovery (MDCD)" />
				<attribute name="Implementation-Version" value="${version}" />
			</manifest>
			<metainf dir="${metainf_dir}/">
				<include name="**/services/*" />
			</metainf>
		</jar>
	</target>

	<target name="bundle" description="Creates an OSGi bundle" depends="download_bnd_file,jar,compile">
		<taskdef resource="aQute/bnd/ant/taskdef.properties" classpath="${basedir}/${bnd.jar}" />
		<echo file="${dist_dir}/${ant.project.name}-${version}.bnd" append="false">
			Bundle-Version: ${version}
			Bundle-Name: ST2071-3 Media and Device Control Discovery (MDCD) For Android
			Bundle-SymbolicName: ${basepackage}
			Export-Package: ${basepackage};version=${version}
			Bundle-Vendor: smpte.org
			Bundle-RequiredExecutionEnvironment: J2SE-1.7
			Import-Package: !${basepackage}*,*
		</echo>
        <bndwrap definitions="${dist_dir}" jars="${dist_dir}/${jarname}" output="${dist_dir}/${bundle.jar}" />
		<delete file="${dist_dir}/${ant.project.name}-${version}.bnd" />
	</target>
    
    <target name="test_bnd_file">
       <available file="${basedir}/${bnd.jar}"  property="bnd.file.found"/>
    </target>
    
    <target name="download_bnd_file" depends="test_bnd_file" unless="bnd.file.found">
        <get src="http://www.aqute.biz/repo/biz/aQute/bnd/0.0.384/bnd-0.0.384.jar" dest="${basedir}/${bnd.jar}" />
    </target>

	<target name="clean" description="Remove old class files">
		<delete dir="${build_dir}" />
        <delete file="${dist_dir}/${jarname}"/>
        <delete file="${dist_dir}/${targzname}"/>
        <delete file="${dist_dir}/${zipname}"/>
        <delete file="${dist_dir}/${bundle.jar}"/>
	</target>

	<target name="docs" description="Makes Javadoc documentation">
		<javadoc destdir="${doc_dir}" sourcepath="${java_src_dir}">
		    <doctitle>SMPTE ST2071-3 Media &amp; Device Control Discovery For Android</doctitle>
			<packageset dir="${java_src_dir}">
				<include name="${basepackage}"/>
			</packageset>
			<link href="${j2se.javadoc}" />
		</javadoc>
	</target>

	<target name="docsclean" description="Remove old documentation">
		<delete dir="${doc_dir}" />
	</target>

	<target name="reportsclean" description="Remove old reports">
		<delete dir="${reports_dir}" />
	</target>

	<property name="source_excludes" value="classes,**/*.class,${jarname},${zipname},${targzname}" />

	<target name="sourcedist" description="Builds source distributions" depends="jar,docs">
		<zip destfile="${dist_dir}/${zipname}">
			<zipfileset dir="${basedir}" prefix="${ant.project.name}-${version}" excludes="${source_excludes}" />
		</zip>
		<tar destfile="${dist_dir}/${targzname}" compression="gzip">
			<tarfileset dir="${basedir}" prefix="${ant.project.name}-${version}" excludes="${source_excludes}" />
		</tar>
	</target>

	<target name="compile_tests" depends="compile">
		<javac destdir="${tests_dir}" debug="true" target="1.7" source="1.7">
			<src path="${tests_dir}" />
			<exclude name="**/tests/**/*.java" />
		</javac>
	</target>

	<target name="run_tests">
		<path id="tests_classpath">
			<path location="${basedir}" />
			<path location="${tests_dir}" />
		</path>
		<antcall target="_run_tests">
			<param name="classpath_name" value="tests_classpath" />
		</antcall>
	</target>

	<target name="_run_tests" depends="compile_tests">
		<junit fork="yes" forkmode="perTest" dir="${basedir}" haltonerror="on" haltonfailure="on">
			<classpath>
				<path location="${basedir}" />
				<path location="${tests_dir}" />
			</classpath>
			<formatter type="plain" usefile="no" />
			<test name="${testcase}" if="testcase" />
			<batchtest unless="testcase">
				<fileset dir="${tests_dir}">
					<include name="**/tests/**/*.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="coverage_report" depends="clean,compile_tests" if="jcoverage_dir">
		<taskdef resource="tasks.properties">
			<classpath>
				<path location="${jcoverage_dir}/jcoverage.jar" />
				<path location="${jcoverage_dir}/lib/log4j/1.2.8/*.jar" />
				<path location="${jcoverage_dir}/log4j.jar" />
				<path location="${jcoverage_dir}/bcel.jar" />
				<path location="${jcoverage_dir}/oro.jar" />
				<path location="${jcoverage_dir}/gnu.getopt.jar" />
			</classpath>
		</taskdef>
		<instrument todir="${basedir}/iclasses">
			<fileset dir="${basedir}">
				<include name="**/*.class" />
				<exclude name="iclasses/**" />
				<exclude name="**/tests/**/*.java" />
			</fileset>
		</instrument>
		<path id="itests_classpath">
			<path location="${basedir}/iclasses" />
			<path location="${tests_dir}" />
			<path location="${jcoverage_dir}/jcoverage.jar" />
			<path location="${jcoverage_dir}/lib/log4j/1.2.8/*.jar" />
			<path location="${jcoverage_dir}/log4j.jar" />
			<path location="${jcoverage_dir}/bcel.jar" />
			<path location="${jcoverage_dir}/oro.jar" />
			<path location="${jcoverage_dir}/gnu.getopt.jar" />
		</path>
		<antcall target="_run_tests">
			<param name="classpath_name" value="itests_classpath" />
		</antcall>
		<report srcdir="${basedir}" destdir="${reports_dir}/coverage" />
		<delete dir="${basedir}/iclasses" />
	</target>

</project>
